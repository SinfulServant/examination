{
    "questions": {
      "Що таке асинхронна функція в JavaScript?": {
        "options": [
          "Це функція, яка завжди викликається після інших функцій",
          "Це функція, яка виконується паралельно з іншими функціями",
          "Це функція, яка виконується асинхронно після завершення певної операції",
          "Це функція, яка виконується синхронно з іншими функціями"
        ],
        "correctAnswer": "2"
      },
      "Які основні методи масиву в JavaScript?": {
        "options": [
          "map(), filter(), reduce()",
          "add(), remove(), update()",
          "append(), delete(), modify()",
          "sort(), join(), slice()"
        ],
        "correctAnswer": "0"
      },
      "Що таке метод bind() у JavaScript?": {
        "options": [
          "Це метод, який зв'язує функцію з конкретним контекстом",
          "Це метод, який замінює вирази у рядках",
          "Це метод, який перетворює масив на рядок",
          "Це метод, який виконує обчислення над кожним елементом масиву"
        ],
        "correctAnswer": "0"
      },
      "Що таке замикання (closures) в JavaScript?": {
        "options": [
          "Це механізм автоматичного замикання файлів в JavaScript",
          "Це механізм, який дозволяє викликати функції без їх визначення",
          "Це механізм, що дозволяє функціям мати доступ до змінних зовнішнього контексту, навіть після того, як цей контекст вийшов з області видимості",
          "Це механізм, який дозволяє використовувати зовнішні змінні тільки у межах області видимості"
        ],
        "correctAnswer": "2"
      },
      "Що таке рекурсія в JavaScript?": {
        "options": [
          "Це методологія програмування, що базується на зміні даних у масивах",
          "Це механізм виконання одного фрагмента коду в іншому",
          "Це техніка, коли функція викликає саму себе",
          "Це спосіб виведення результатів програми на екран"
        ],
        "correctAnswer": "2"
      },
      "Що таке проміси (Promises) в JavaScript?": {
        "options": [
          "Проміси - це значення, яке може бути доступне або недоступне в залежності від результату асинхронної операції",
          "Проміси - це функції, які обгортають інші функції для виконання певних операцій",
          "Проміси - це об'єкти, які зберігають дані в масивах",
          "Проміси - це ключові слова, які використовуються для визначення змінних"
        ],
        "correctAnswer": "0"
      },
      "Які особливості має об'єктна модель JavaScript?": {
        "options": [
          "Прототипне наслідування, класи, інкапсуляція, поліморфізм",
          "Об'єктно-орієнтоване програмування, компоненти, декомпозиція, інкапсуляція",
          "Конструктори, прототипи, спадкування, поліморфізм",
          "Колекції, методи, замикання, інтерфейси"
        ],
        "correctAnswer": "2"
      },
      "Що таке анонімна функція в JavaScript?": {
        "options": [
          "Це функція без імені, яка може бути присвоєна змінній або передана як аргумент іншій функції",
          "Це функція, яка завжди викликається після інших функцій",
          "Це функція, яка виконується паралельно з іншими функціями",
          "Це функція, яка не може бути викликана напряму, тільки як метод об'єкта"
        ],
        "correctAnswer": "0"
      },
      "Що таке деструктуризація в JavaScript?": {
        "options": [
          "Це процес створення нових об'єктів за допомогою розбиття існуючих",
          "Це процес видалення властивостей з об'єктів",
          "Це спосіб викликати методи об'єктів",
          "Це спосіб розбиття структури даних на окремі частини для отримання окремих значень"
        ],
        "correctAnswer": "3"
      },
      "Що таке стрілкова функція в JavaScript і як вона відрізняється від звичайної функції?": {
        "options": [
          "Стрілкова функція - це синтаксичний цукор для звичайних функцій, який простіше писати та зрозуміліше читати. Вона не має свого власного контексту this та не може бути використана для створення об'єктів за допомогою new",
          "Стрілкова функція - це спеціальний вид функції, який завжди має контекст this, навіть при виклику в методі об'єкта. Вона може бути використана для створення об'єктів за допомогою new",
          "Стрілкова функція - це функція, яка не приймає аргументів та не повертає значення",
          "Стрілкова функція - це функція, яка може бути викликана тільки як метод об'єкта"
        ],
        "correctAnswer": "0"
      },
      "Чи можливо перевизначити const змінну в JavaScript?": {
        "options": [
          "Так, const змінну можна перевизначити у будь-якому місці програми",
          "Ні, const змінну не можна перевизначити після того, як вона була ініціалізована",
          "Так, const змінну можна перевизначити тільки у функціях",
          "Ні, const змінну можна перевизначити тільки за допомогою спеціального оператора"
        ],
        "correctAnswer": "1"
      }
    }
  }
  